// #main_script lifecycle.lua
SetCurrentLanguage language="@this_script_language"
InstallPlugin emit_responses=true, context_policy="Global"
FinalizeApp

// load script a 
LoadScriptAs as_name="script_a", path="lifecycle.lua"
WaitForScriptLoaded name="script_a"
AttachStaticScript script="script_a"
RunUpdateOnce
AssertCallbackSuccess attachment="StaticScript", label="OnScriptLoaded", script="script_a", expect_string_value="loaded!"
AssertNoCallbackResponsesEmitted

// reload script_a, with the same content
ReloadScriptFrom script="script_a", path="lifecycle.lua"
RunUpdateOnce 
AssertCallbackSuccess attachment="StaticScript", label="OnScriptUnloaded", script="script_a", expect_string_value="unloaded!"
AssertCallbackSuccess attachment="StaticScript", label="OnScriptLoaded", script="script_a", expect_string_value="loaded!"
AssertCallbackSuccess attachment="StaticScript", label="OnScriptReloaded", script="script_a", expect_string_value="reloaded with: unloaded!"
AssertNoCallbackResponsesEmitted

// load licecycle_b.lua, which prefixes all outputs with "B"
LoadScriptAs as_name="script_b", path="lifecycle_b.lua"
WaitForScriptLoaded name="script_b"
AttachStaticScript script="script_b"
RunUpdateOnce
AssertCallbackSuccess attachment="StaticScript", label="OnScriptLoaded", script="script_b", expect_string_value="B: loaded!"
AssertNoCallbackResponsesEmitted

// reload script_b, with the same content
ReloadScriptFrom script="script_b", path="lifecycle_b.lua"
RunUpdateOnce
AssertCallbackSuccess attachment="StaticScript", label="OnScriptUnloaded", script="script_b", expect_string_value="B: unloaded!"
AssertCallbackSuccess attachment="StaticScript", label="OnScriptLoaded", script="script_b", expect_string_value="B: loaded!"
AssertCallbackSuccess attachment="StaticScript", label="OnScriptReloaded", script="script_b", expect_string_value="B: reloaded with: B: unloaded!"
AssertNoCallbackResponsesEmitted

// assert context residents 
AssertContextResidents attachment="StaticScript", script="script_a", residents_num=2
AssertContextResidents attachment="StaticScript", script="script_b", residents_num=2


// now first drop the script asset, assert that does nothing yet 
DropScriptAsset script="script_a"
RunUpdateOnce
AssertNoCallbackResponsesEmitted

// now detach the second script, expect unloading, but with the callback from script_b
DetachStaticScript script="script_a"
RunUpdateOnce
AssertCallbackSuccess attachment="StaticScript", label="OnScriptUnloaded", script="script_a", expect_string_value="B: unloaded!"
AssertNoCallbackResponsesEmitted
AssertContextResidents attachment="StaticScript", script="script_a", residents_num=1

// drop the second script asset, expect unloading, with callback from script_b
DropScriptAsset script="script_b"
RunUpdateOnce
AssertNoCallbackResponsesEmitted

// detach the second script, expect unloading 
DetachStaticScript script="script_b"
RunUpdateOnce
AssertCallbackSuccess attachment="StaticScript", label="OnScriptUnloaded", script="script_b", expect_string_value="B: unloaded!"
AssertNoCallbackResponsesEmitted
AssertContextResidents attachment="StaticScript", script="script_b", residents_num=0