{
  "version": "{{version}}",
  "globals": {
    "my_static_instance": {
      "type_kind": {
        "val": "ladfile_builder::test::StructType<usize>"
      },
      "is_static": true
    },
    "my_non_static_instance": {
      "type_kind": {
        "vec": {
          "val": "ladfile_builder::test::UnitType"
        }
      },
      "is_static": false
    },
    "map": {
      "type_kind": {
        "hashMap": [
          {
            "primitive": "string"
          },
          {
            "union": [
              {
                "primitive": "string"
              },
              {
                "primitive": "string"
              }
            ]
          }
        ]
      },
      "is_static": false
    }
  },
  "types": {
    "ladfile_builder::test::EnumType": {
      "identifier": "EnumType",
      "crate": "ladfile_builder",
      "path": "ladfile_builder::test::EnumType",
      "layout": [
        {
          "kind": "Unit",
          "name": "Unit"
        },
        {
          "kind": "Struct",
          "name": "Struct",
          "fields": [
            {
              "name": "field",
              "type": "usize"
            }
          ]
        },
        {
          "kind": "TupleStruct",
          "name": "TupleStruct",
          "fields": [
            {
              "type": "usize"
            },
            {
              "type": "String"
            }
          ]
        }
      ]
    },
    "ladfile_builder::test::StructType<usize>": {
      "identifier": "StructType",
      "crate": "ladfile_builder",
      "path": "ladfile_builder::test::StructType<usize>",
      "generics": [
        {
          "type_id": "usize",
          "name": "T"
        }
      ],
      "documentation": " I am a struct",
      "associated_functions": [
        "ladfile_builder::test::StructType<usize>::hello_world"
      ],
      "layout": {
        "kind": "Struct",
        "name": "StructType",
        "fields": [
          {
            "name": "field",
            "type": "usize"
          },
          {
            "name": "field2",
            "type": "usize"
          }
        ]
      }
    },
    "ladfile_builder::test::TupleStructType": {
      "identifier": "TupleStructType",
      "crate": "ladfile_builder",
      "path": "ladfile_builder::test::TupleStructType",
      "documentation": " I am a tuple test type",
      "layout": {
        "kind": "TupleStruct",
        "name": "TupleStructType",
        "fields": [
          {
            "type": "usize"
          },
          {
            "type": "String"
          }
        ]
      }
    },
    "ladfile_builder::test::UnitType": {
      "identifier": "UnitType",
      "crate": "ladfile_builder",
      "path": "ladfile_builder::test::UnitType",
      "documentation": " I am a unit test type",
      "layout": {
        "kind": "Struct",
        "name": "UnitType"
      }
    }
  },
  "functions": {
    "::hello_world": {
      "namespace": null,
      "identifier": "hello_world",
      "arguments": [
        {
          "kind": {
            "primitive": "usize"
          },
          "name": "arg1"
        }
      ],
      "return_type": {
        "kind": {
          "primitive": "usize"
        }
      }
    },
    "ladfile_builder::test::StructType<usize>::hello_world": {
      "namespace": "ladfile_builder::test::StructType<usize>",
      "identifier": "hello_world",
      "arguments": [
        {
          "kind": {
            "primitive": "reflectReference"
          },
          "documentation": "I am some docs for argument 1",
          "name": "ref_"
        },
        {
          "kind": {
            "tuple": [
              {
                "primitive": "usize"
              },
              {
                "primitive": "string"
              }
            ]
          },
          "documentation": "I am some docs for argument 2",
          "name": "tuple"
        },
        {
          "kind": {
            "option": {
              "vec": {
                "ref": "ladfile_builder::test::EnumType"
              }
            }
          },
          "documentation": "I am some docs for argument 3",
          "name": "option_vec_ref_wrapper"
        }
      ],
      "return_type": {
        "kind": {
          "primitive": "usize"
        },
        "documentation": "I am some docs for the return type, I provide a name for the return value too",
        "name": "return"
      }
    }
  },
  "primitives": {
    "DynamicFunction": {
      "kind": "dynamicFunction",
      "documentation": "A callable dynamic function"
    },
    "DynamicFunctionMut": {
      "kind": "dynamicFunctionMut",
      "documentation": "A stateful and callable dynamic function"
    },
    "FunctionCallContext": {
      "kind": "functionCallContext",
      "documentation": "Function call context, if accepted by a function, means the function can access the world in arbitrary ways."
    },
    "OsString": {
      "kind": "osString",
      "documentation": "A heap allocated OS string"
    },
    "PathBuf": {
      "kind": "pathBuf",
      "documentation": "A heap allocated file path"
    },
    "ReflectReference": {
      "kind": "reflectReference",
      "documentation": "A reference to a reflectable type"
    },
    "String": {
      "kind": "string",
      "documentation": "A heap allocated string"
    },
    "bool": {
      "kind": "bool",
      "documentation": "A boolean value"
    },
    "char": {
      "kind": "char",
      "documentation": "An 8-bit character"
    },
    "f32": {
      "kind": "f32",
      "documentation": "A 32-bit floating point number"
    },
    "f64": {
      "kind": "f64",
      "documentation": "A 64-bit floating point number"
    },
    "i128": {
      "kind": "i128",
      "documentation": "A signed 128-bit integer"
    },
    "i16": {
      "kind": "i16",
      "documentation": "A signed 16-bit integer"
    },
    "i32": {
      "kind": "i32",
      "documentation": "A signed 32-bit integer"
    },
    "i64": {
      "kind": "i64",
      "documentation": "A signed 64-bit integer"
    },
    "i8": {
      "kind": "i8",
      "documentation": "A signed 8-bit integer"
    },
    "isize": {
      "kind": "isize",
      "documentation": "A signed pointer-sized integer"
    },
    "str": {
      "kind": "str",
      "documentation": "A string slice"
    },
    "u128": {
      "kind": "u128",
      "documentation": "An unsigned 128-bit integer"
    },
    "u16": {
      "kind": "u16",
      "documentation": "An unsigned 16-bit integer"
    },
    "u32": {
      "kind": "u32",
      "documentation": "An unsigned 32-bit integer"
    },
    "u64": {
      "kind": "u64",
      "documentation": "An unsigned 64-bit integer"
    },
    "u8": {
      "kind": "u8",
      "documentation": "An unsigned 8-bit integer"
    },
    "usize": {
      "kind": "usize",
      "documentation": "An unsigned pointer-sized integer"
    }
  },
  "description": "## Hello gentlemen\n I am  markdown file.\n - hello\n - world"
}