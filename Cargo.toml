[package]
name = "bevy_mod_scripting"
version = "0.9.0-alpha.3"
authors = ["Maksymilian Mozolewski <makspl17@gmail.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
description = "Multi language scripting in Bevy"
repository = "https://github.com/makspll/bevy_mod_scripting"
homepage = "https://github.com/makspll/bevy_mod_scripting"
keywords = ["bevy", "gamedev", "scripting", "lua"]
categories = ["game-development"]
readme = "readme.md"
include = ["readme.md", "/src", "/examples", "/assets", "LICENSE"]

[lib]
name = "bevy_mod_scripting"
path = "src/lib.rs"

[package.metadata."docs.rs"]
features = ["lua54"]

[features]
default = ["core_functions", "bevy_bindings", "unsafe_lua_modules"]

## lua
lua = ["bevy_mod_scripting_lua"]
# one of these must be selected
lua51 = ["bevy_mod_scripting_lua/lua51", "lua"]
lua52 = ["bevy_mod_scripting_lua/lua52", "lua"]
lua53 = ["bevy_mod_scripting_lua/lua53", "lua"]
lua54 = ["bevy_mod_scripting_lua/lua54", "lua"]
luajit = ["bevy_mod_scripting_lua/luajit", "lua"]
luajit52 = ["bevy_mod_scripting_lua/luajit52", "lua"]
luau = ["bevy_mod_scripting_lua/luau", "lua"]

# bindings 
core_functions = ["bevy_mod_scripting_functions/core_functions"]
bevy_bindings = ["bevy_mod_scripting_functions/bevy_bindings"]

# optional
unsafe_lua_modules = ["bevy_mod_scripting_lua?/unsafe_lua_modules"]
mlua_serialize = ["bevy_mod_scripting_lua/mlua_serialize"]
mlua_macros = ["bevy_mod_scripting_lua/mlua_macros"]
mlua_async = ["bevy_mod_scripting_lua/mlua_async"]

## rhai
# rhai = ["bevy_mod_scripting_rhai"]

## rune
# rune = ["bevy_mod_scripting_rune"]

[dependencies]
bevy = { workspace = true }
bevy_mod_scripting_core = { workspace = true }
bevy_mod_scripting_lua = { path = "crates/languages/bevy_mod_scripting_lua", version = "0.9.0-alpha.3", optional = true }
# bevy_mod_scripting_rhai = { path = "crates/languages/bevy_mod_scripting_rhai", version = "0.9.0-alpha.2", optional = true }
# bevy_mod_scripting_rune = { path = "crates/languages/bevy_mod_scripting_rune", version = "0.9.0-alpha.2", optional = true }
bevy_mod_scripting_functions = { workspace = true }

[workspace.dependencies]
bevy = { version = "0.15.0", default-features = false }
bevy_mod_scripting_core = { path = "crates/bevy_mod_scripting_core", version = "0.9.0-alpha.3" }
bevy_mod_scripting_functions = { path = "crates/bevy_mod_scripting_functions", version = "0.9.0-alpha.3", default-features = false }
mlua = { version = "0.10" }
# rhai = { version = "1.20.1" }

# test utilities
script_integration_test_harness = { path = "crates/script_integration_test_harness" }
test_utils = { path = "crates/test_utils" }

[dev-dependencies]
bevy = { workspace = true, default-features = true }
clap = { version = "4.1", features = ["derive"] }
rand = "0.8.5"
bevy_console = "0.13"
# rhai-rand = "0.1"
ansi-parser = "0.9"

[workspace]
members = [
    "crates/bevy_mod_scripting_core",
    "crates/languages/bevy_mod_scripting_lua",
    # "crates/languages/bevy_mod_scripting_rhai",
    # "crates/languages/bevy_mod_scripting_rune",
    "crates/test_utils",
    "crates/bevy_mod_scripting_functions",
    "crates/xtask",
    "crates/script_integration_test_harness",
]
resolver = "2"
exclude = ["crates/bevy_api_gen", "crates/macro_tests"]

[profile.dev]
debug = 1
opt-level = 1

[profile.dev.package."*"]
debug = 0
opt-level = 3

[profile.ephemeral-build]
inherits = "dev"
opt-level = 2
codegen-units = 8
incremental = false
debug = false

[profile.release-with-debug]
inherits = "release"
debug = true

[[example]]
name = "game_of_life"
path = "examples/game_of_life.rs"
required-features = ["lua54", "bevy/file_watcher", "bevy/multi_threaded"]
